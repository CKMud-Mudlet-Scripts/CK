[
    {
        "name": "CK feature",
        "regex": "^CK features?$"
    },
    {
        "name": "CK feature toggle",
        "regex": "^CK feature (.+) (on|off)$"
    },
    {
        "name": "CK constant",
        "regex": "^CK constants? ?(?: ([a-zA-Z_\\.-]+))?$"
    },
    {
        "name": "CK constant set",
        "regex": "^CK constants? ([a-zA-Z_\\.-]+)\\s*=\\s*(.+)$"
    },
    {
        "name": "CK pkg",
        "regex": "^CK pkg(?: (versions|update|install|check-update|help)(?: (.+))?)?$"
    },
    {
        "name": "quit (without reconnecting)",
        "regex": "^quit$",
        "script": "send(\"quit\", true)\nregisterAnonymousEventHandler(\"sysDisconnectionEvent\", disconnect, true)"
    },
    {
        "name": "zetabot",
        "regex": "^zeta(?:bot)?(?: ([A-Za-z0-9]+)(?: (.+))?)?$",
        "script": "CK.API.Zetabot:toggle(matches[2], matches[3])"
    },
    {
        "name": "learning",
        "regex": "^autolearn(?: ([A-Za-z0-9]+)(?: (.+))?)?$",
        "script": "CK.API.Learning:toggle(matches[2], matches[3])"
    },
    {
        "name": "CK",
        "regex": "^CK$",
        "script": "print('CK feature - see feature toggles\\nCK feature toggle - set a feature on/off\\nCK constants - see constant values\\nCK constant set - set a constant value\\nCK pkg -- Manage CK Packages\\nzetabot - autobot but better')"
    },
    {
        "name": "CK update",
        "regex": "^CK update$",
        "script": "expandAlias(\"CK pkg update CK\", false)"
    },
    {
        "name": "Android Configure",
        "regex": "^configure(?: (.+))$",
        "script": "CK.API.Racial:Android_setConfigure(matches[2]); send(matches[1], false)"
    },
    {
        "name": "Redeem All",
        "regex": "^redeem all$"
    },
    {
        "name": "unravel",
        "regex": "^unravel$",
        "script": "send(f\"focus 'unravel' {CK.Target.name}\")"
    },
    {
        "name": "blast",
        "regex": "^blast(?: ([A-Za-z0-9]+))?$",
        "script": "CK.API:cmd_blast(matches[2])"
    },
    {
        "name": "strike",
        "regex": "^strike(?: ([A-Za-z0-9]+))?$",
        "script": "CK.API:cmd_strike(matches[2])"
    }
]